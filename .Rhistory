anzahl <- data.frame(table(long[,1:2], exclude = "Nicht Gewählt"))
ggplot(anzahl,aes(x=time, y=Freq)) +
scale_x_discrete(limits = rev(levels(anzahl$time))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat = "identity", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeiten je Antwort") +
xlab("")
hist(studiengangsdaten$m3_4)
hist(studiengangsdaten$m4)
ggplot(studiengangsdaten, aes(x=m4)) + geom_histogram(binwidth=.5, colour="black", fill="white") +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
suppressPackageStartupMessages(require(plyr))
cdat <- ddply(studiengangsdaten, "a5", summarise, rating.mean=mean(rating))
ggplot(studiengangsdaten, aes(x=m4)) + geom_histogram(binwidth=.5, colour="black", fill="white") +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
suppressPackageStartupMessages(require(plyr))
cdat <- ddply(studiengangsdaten, "a5", summarise, rating.mean=mean(rating))
suppressPackageStartupMessages(require(plyr))
cdat <- ddply(studiengangsdaten, "a5", summarise, rating.mean=mean(m4))
ggplot(studiengangsdaten, aes(x=m4)) + geom_histogram(binwidth=.5, colour="black", fill="white") +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(studiengangsdaten, aes(x=m4)) + geom_histogram(colour="black", fill="white") +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(studiengangsdaten, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(studiengangsdaten, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous(limits=c(0, max(m4))) +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(studiengangsdaten, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous(limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(studiengangsdaten[!is.na(studiengangsdaten$m4)], aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous(limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
df <- studiengangsdaten[!is.na(studiengangsdaten$m4)]
df <- studiengangsdaten[!is.na(studiengangsdaten$m4),]
df <- studiengangsdaten[!is.na(studiengangsdaten$m4),]
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous(limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
cdat <- ddply(studiengangsdaten, "a5", summarise, rating.mean=mean(m4))
df <- studiengangsdaten[!is.na(studiengangsdaten$m4),]
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous(limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
df <- studiengangsdaten[!is.na(studiengangsdaten$m4),]
cdat <- ddply(df, "a5", summarise, rating.mean=mean(m4))
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous(limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ .) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous( limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ ., drop = TRUE) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
df <- studiengangsdaten[!is.na(studiengangsdaten$m4),]
df <- studiengangsdaten[!is.na(studiengangsdaten$a5),]
cdat <- ddply(df, "a5", summarise, rating.mean=mean(m4))
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous( limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ ., drop = TRUE) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
cdat <- ddply(df, "a5", summarise, rating.mean=mean(m4))
ccdat
ccdat
cdat
df <- studiengangsdaten[!is.na(studiengangsdaten$m4),]
df <- df[!is.na(df$a5),]
cdat <- ddply(df, "a5", summarise, rating.mean=mean(m4))
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous( limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ ., drop = TRUE) +
geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white")
+ scale_x_continuous( limits=c(0, max(studiengangsdaten$m4)))
+ facet_grid(a5 ~ ., drop = TRUE)
+ geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
+ xlab("Stunden")
+ ylab("Häufigkeiten je Antwort")
df <- studiengangsdaten[!is.na(studiengangsdaten$m4),]
df <- df[!is.na(df$a5),]
cdat <- ddply(df, "a5", summarise, rating.mean=mean(m4))
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white")
+ scale_x_continuous( limits=c(0, max(studiengangsdaten$m4)))
+ facet_grid(a5 ~ ., drop = TRUE)
+ geom_vline(data=cdat, aes(xintercept=rating.mean),
linetype="dashed", size=1, colour="red")
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous( limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ ., drop = TRUE) +
geom_vline(data=cdat,
aes(xintercept=rating.mean),
linetype="dashed",
size=1,
colour="red")
ggplot(df, aes(x=m4)) + geom_histogram(binwidth=5, colour="black", fill="white") +
scale_x_continuous( limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ ., drop = TRUE) +
geom_vline(data=cdat,
aes(xintercept=rating.mean),
linetype="dashed",
size=1,
colour="red") +
xlab("Stunden") +
ylab("Häufigkeiten je Antwort")
ggplot(df, aes(x=m4)) +
geom_histogram(binwidth=5, colour="black",  fill="#66B2FF") +
scale_x_continuous( limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ ., drop = TRUE) +
geom_vline(data=cdat,
aes(xintercept=rating.mean),
linetype="dashed",
size=1,
colour="red") +
xlab("Stunden") +
ylab("Häufigkeiten je Antwort")
ggplot(df, aes(x=m4)) +
geom_histogram(binwidth=5, colour="black",  fill="#66B2FF") +
scale_x_continuous( limits=c(0, max(studiengangsdaten$m4))) +
facet_grid(a5 ~ ., drop = TRUE) +
geom_vline(data=cdat,
aes(xintercept=rating.mean),
linetype="dashed",
size=1,
colour="red") +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=7, colour = "black"),
axis.title=element_text(size=9)
) +  xlab("Stunden") +
ylab("Häufigkeiten je Antwort")
long <- reshape(studiengangsdaten, dir = "long", varying = 31:33, sep="_", drop = c(1:30, 34:60))
levels(long$m6) <- gsub("sehr ", "sehr\n ", c(levels(long$m6)))
long$time <- factor(long$time, levels=c("1","2","3"),labels=c(
".... den von Ihnen gewählten Studiengang\n noch einmal wählen?",
"... noch einmal ein Studium an der\n PFH Private Hochschule Göttingen wählen?",
"... sagen, dass Sie an Ihrer\n Wunschhochschule studieren?"
))
ggplot(long,aes(x=m6)) +
scale_x_discrete(drop=FALSE) +
scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=7, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeiten je Antwort") +
xlab("") +
facet_wrap( ~ time, ncol=1)
ggplot(studiengangsdaten,aes(x=m9)) +
scale_x_discrete(drop=FALSE) +
scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=7, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häuf. je Ant.") +
xlab("")
cdat <- ddply(df, "a5", summarise, rating.mean=mean(m4), rating.sd=sd(m4))
cdat
cdat <- ddply(df, "a5", summarise, rating.mean=round(mean(m4),1), rating.sd=round(sd(m4),1))
cdat
cdat[1,1]
cdat[2,2]
cdat[1,2]
ggplot(studiengangsdaten,aes(x=a2)) +
scale_x_discrete(drop=FALSE, limits=rev(levels(studiengangsdaten$a1))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeit je Antwort") +
xlab("")
ggplot(studiengangsdaten,aes(x=a2)) +
scale_x_discrete(drop=FALSE, limits=rev(levels(studiengangsdaten$a2))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeit je Antwort") +
xlab("")
anzahl <- data.frame(table(studiengangsdaten$a3, studiengangsdaten$a4))
levels(anzahl$Var2) <- gsub(" Semester", "", levels(anzahl$Var2))
ggplot(anzahl, aes(Var2, Var1)) +
scale_y_discrete(drop=FALSE, limits=rev(levels(anzahl$Var1))) +
geom_point(aes(size = Freq), colour = "lightblue") +
theme(
axis.text.y = element_text(size=9, colour = "black"),
axis.text.x = element_text(size=9, colour = "black"),
legend.position="none"
) +
xlab("Semester") +
ylab("Studienort") +
geom_text(aes(label = Freq, size=9))
anzahl <- data.frame(table(studiengangsdaten$a3, studiengangsdaten$a4))
levels(anzahl$Var2) <- gsub(" Semester", "", levels(anzahl$Var2))
ggplot(anzahl, aes(Var2, Var1)) +
scale_y_discrete(drop=FALSE, limits=rev(levels(anzahl$Var1))) +
geom_point(aes(size = Freq), colour = "lightblue") +
theme(
axis.text.y = element_text(size=9, colour = "black"),
axis.text.x = element_text(size=9, colour = "black"),
legend.position="none"
) +
xlab("Semester") +
ylab("Studienort") +
geom_text(aes(label = Freq, size=7), size=7)
anzahl <- data.frame(table(studiengangsdaten$a3, studiengangsdaten$a4))
levels(anzahl$Var2) <- gsub(" Semester", "", levels(anzahl$Var2))
ggplot(anzahl, aes(Var2, Var1)) +
scale_y_discrete(drop=FALSE, limits=rev(levels(anzahl$Var1))) +
geom_point(aes(size = Freq), colour = "lightblue") +
theme(
axis.text.y = element_text(size=9, colour = "black"),
axis.text.x = element_text(size=9, colour = "black"),
legend.position="none"
) +
xlab("Semester") +
ylab("Studienort") +
geom_text(aes(label = Freq, size=2), size=2)
anzahl <- data.frame(table(studiengangsdaten$a3, studiengangsdaten$a4))
levels(anzahl$Var2) <- gsub(" Semester", "", levels(anzahl$Var2))
ggplot(anzahl, aes(Var2, Var1)) +
scale_y_discrete(drop=FALSE, limits=rev(levels(anzahl$Var1))) +
geom_point(aes(size = Freq), colour = "lightblue") +
theme(
axis.text.y = element_text(size=9, colour = "black"),
axis.text.x = element_text(size=9, colour = "black"),
legend.position="none"
) +
xlab("Semester") +
ylab("Studienort") +
geom_text(aes(label = Freq, size=3))
anzahl <- data.frame(table(studiengangsdaten$a3, studiengangsdaten$a4))
levels(anzahl$Var2) <- gsub(" Semester", "", levels(anzahl$Var2))
ggplot(anzahl, aes(Var2, Var1)) +
scale_y_discrete(drop=FALSE, limits=rev(levels(anzahl$Var1))) +
geom_point(aes(size = Freq), colour = "lightblue") +
theme(
axis.text.y = element_text(size=9, colour = "black"),
axis.text.x = element_text(size=9, colour = "black"),
legend.position="none"
) +
xlab("Semester") +
ylab("Studienort") +
geom_text(aes(label = Freq, size=4))
levels(studiengangsdaten$a3)
levels(studiengangsdaten$a2)
levels(studiengangsdaten$a1)
studiengaenge[[levels(studiengangsdaten$a1)]][1]
sapply(levels(studiengaenge$a1, length))
sapply(levels(studiengaenge$a1), length)
sapply(levels(studiengaenge$a1), nchar)
sapply(levels(studiengangsdaten$a1), length)
sapply(levels(studiengangsdaten$a1), function()x{studiengaenge[[x]]})
sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]]})
sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]][1]})
studiengangsdaten$a1_copy <- studiengangsdaten$a1
levels(studiengangsdaten$a1_copy) <- sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]][1]})
sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]][1]})
levels(studiengangsdaten$a1_copy)
ggplot(studiengangsdaten,aes(x=a1_copy)) +
scale_x_discrete(drop=FALSE, limits=rev(levels(studiengangsdaten$a1_copy))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeit je Antwort") +
xlab("")
long <- reshape(studiengangsdaten, dir = "long", varying = 24:27, sep="_", drop = c(1:23, 28:60))
# long <- na.omit(long)
long$time <- factor(long$time, levels=c("1","2","3", "4"),labels=c(
"finanziell",
"flexible Arbeitszeit",
"Studium als Teil der Arbeitszeit",
"Arbeitszeitreduktion Arbeitszeitreduktion"
))
# calculate sum per category
anzahl <- data.frame(table(long[,1:2], exclude = "Nicht Gewählt"))
ggplot(anzahl,aes(x=time, y=Freq)) +
scale_x_discrete(limits = rev(levels(anzahl$time))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat = "identity", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeiten je Antwort") +
xlab("")
anzahl
long <- reshape(studiengangsdaten, dir = "long", varying = 24:27, sep="_", drop = c(1:23, 28:61))
# long <- na.omit(long)
long$time <- factor(long$time, levels=c("1","2","3", "4"),labels=c(
"finanziell",
"flexible Arbeitszeit",
"Studium als Teil der Arbeitszeit",
"Arbeitszeitreduktion Arbeitszeitreduktion"
))
# calculate sum per category
anzahl <- data.frame(table(long[,1:2], exclude = "Nicht Gewählt"))
ggplot(anzahl,aes(x=time, y=Freq)) +
scale_x_discrete(limits = rev(levels(anzahl$time))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat = "identity", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeiten je Antwort") +
xlab("")
df <- data.frame()
df$a1_copy <- studiengangsdaten$a1
levels(df$a1_copy) <- sapply(levels(df$a1), function(x){studiengaenge[[x]][1]})
ggplot(studiengangsdaten,aes(x=a1_copy)) +
scale_x_discrete(drop=FALSE, limits=rev(levels(studiengangsdaten$a1_copy))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeit je Antwort") +
xlab("")
df <- data.frame(studiengangsdaten$a1)
levels(df$a1) <- sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]][1]})
ggplot(df,aes(x=a1)) +
scale_x_discrete(drop=FALSE, limits=rev(levels(df$a1))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeit je Antwort") +
xlab("")
studiengang_id <- "AlleFern"
inFile <- list()
inFile$datapath <- "aa_zuF.csv"
datum <- "heute"
# provide programme label for report and type
# (Campus vs Fern; more types possible if required, e.g., Fern2016)
studiengaenge <- list(AlleCampus = c("Alle Campusstudiengänge", "Campus"),
BScGM = c('B.Sc. General Management', "Campus"),
BScBA = c("B.Sc. Business Administration", "Campus"),
BScO = c("B.Sc. Orthobionik", "Campus"),
BScV = c("B.Sc. Verbundwerkstoffe/Composites", "Campus"),
MScGM = c("M.Sc. General Management", "Campus"),
MScMO = c("M.Sc. Medizinische Orthobionik", "Campus"),
MScV = c("M.Sc. Verbundwerkstoffe/Composites", "Campus"),
AlleFern = c("Alle Fernstudiengänge", "Fern"),
BABWL = c("B.A. Betriebswirtschaftslehre", "Fern"),
MABWL = c("M.A. Betriebswirtschaftslehre", "Fern"),
MAAM = c("M.A. Advanced Management", "Fern"),
MBA = c("Business Administration (MBA)", "Fern"),
BScPsy = c("B.Sc.Psychologie", "Fern"),
MScPsy = c("M.Sc. Psychologie", "Fern"),
BAWPsy = c("B.A. Wirtschaftspsychologie", "Fern"),
MAWPsy = c("M.A. Wirtschaftspsychologie", "Fern"),
MAAPsyW = c("M.A. Angewandte Psychologie für die Wirtschaft", "Fern")
)
# required changes for new programme:
# add in ui.r; add label and type above; add factor level in syntax
studiengang <- studiengaenge[[studiengang_id]][1]
studiengang_type <- studiengaenge[[studiengang_id]][2]
studiengang_type_label <- ""
if((studiengaenge[[studiengang_id]][2] == "Fern") && !(studiengang_id=="AlleFern")){
studiengang_type_label <- "Fernstudiengang\\\\ "
}
if((studiengaenge[[studiengang_id]][2] == "Campus") && !(studiengang_id=="AlleCampus")){
studiengang_type_label <- "Campusstudiengang\\\\ "
}
data <-
read.csv(
inFile$datapath, quote = "'\"", na.strings = c("", "\"\""), stringsAsFactors =
FALSE, encoding = "UTF-8"
)
# label data, different labels for Campus and Fern
if (studiengang_type == "Campus"){
source("generic_zufriedenheit_syntax_file.R", encoding = "UTF-8", local = TRUE)
}else{
source("generic_zufriedenheit_Fern_syntax_file.R", encoding = "UTF-8", local = TRUE)
}
df <- data.frame(studiengangsdaten$a1)
levels(df$a1) <- sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]][1]})
data <- data[!is.na(data$submitdate),]
studiengangsdaten <- data
df <- data.frame(studiengangsdaten$a1)
levels(df$a1) <- sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]][1]})
df <- data.frame(studiengangsdaten$a1)
levels(studiengangsdaten$a1)
df
str(df)
df <- data.frame(a1= studiengangsdaten$a1)
str(df)
levels(df$a1) <- sapply(levels(studiengangsdaten$a1), function(x){studiengaenge[[x]][1]})
ggplot(df,aes(x=a1)) +
scale_x_discrete(drop=FALSE, limits=rev(levels(df$a1))) +
#  scale_y_continuous(breaks=mybreaks) +
scale_fill_discrete(drop=FALSE) +
geom_bar(stat="bin", fill="#66B2FF", colour="black") +
coord_flip() +
theme(
axis.text.x = element_text(angle = 0, hjust = 0.5, vjust=0.5, size=9, colour = "black"),
axis.text.y = element_text(size=9, colour = "black"),
axis.title=element_text(size=9)
) +
ylab("Häufigkeit je Antwort") +
xlab("")
shiny::runApp()
shiny::runApp()
shiny::runApp()
kommentare <- studiengangsdaten$D1[!is.na(studiengangsdaten$D1)]
kommentare
kommentare <- gsub("^\n+", "", kommentare)
kommentare <- gsub("\n+$", "", kommentare)
# replace % sign
kommentare <- gsub("%", "\\%", kommentare, fixed=TRUE)
kommentare <- gsub("&", "\\&", kommentare, fixed=TRUE)
kommentare <- gsub("\n", "\\\\ ", kommentare)
kommentare <- gsub('\"', '\\"', kommentare)
kommentare
kommentare[25]
kommentare[200]
kommentare[199]
kommentare[198]
kommentare[190:197]
kommentare[180:190]
kommentare[170:180]
kommentare <- studiengangsdaten$D1[!is.na(studiengangsdaten$D1)]
kommentare[176]
kommentare[175]
kommentare <- gsub('\"', '\\" ', kommentare, fixed=TRUE)
kommentare[175]
kommentare <- studiengangsdaten$m10[!is.na(studiengangsdaten$m10)]
kommentare <- gsub("^\n+", "", kommentare)
kommentare <- gsub("\n+$", "", kommentare)
# replace % sign
kommentare <- gsub("%", "\\%", kommentare, fixed=TRUE)
kommentare <- gsub("&", "\\&", kommentare, fixed=TRUE)
kommentare <- gsub("\n", "\\\\ ", kommentare)
kommentare <- gsub('\"', "''", kommentare, fixed=TRUE)
str(kommentare)
kommentare[100:120]
kommentare[140:150]
kommentare[150:160]
shiny::runApp()
shiny::runApp()
shiny::runApp()
